# define the rule type about generator, default 'msgType', also it can be 'spEL'
#rule.type=msgType

###### define a generator named genPriceStram ######
# it can be xsltgen,xmlgen(default),nonegen
generator.genPriceStram.type=xmlgen
generator.genPriceStram.rule=R
generator.genPriceStram.templatePath=./msg-template/USDJPYQuote.xml
# for initialDelay\delay\timeUnit\poolSize, reference ScheduledThreadPoolExecutor.scheduleWithFixedDelay()
generator.genPriceStram.loop.delay=5000
# same as delay if not set
#generator.genPriceStram.loop.initialDelay=1000
# NANOS,MICROS,MILLIS(default),SECONDS,MINUTES,HOURS
#generator.genPriceStram.loop.timeUnit=MILLIS
# the core number of thread pool, default 5
#generator.genPriceStram.loop.poolSize=5
# the number of loop, infinite number if not set
generator.genPriceStram.loop.count=20
# define the unique ID by spring expression, it will can't be cancelled by message if not set(unless GUI)
generator.genPriceStram.loop.idExpression=\#message.getString(131)

###### define a generator named cncPriceStram ######
generator.cncPriceStram.type=xmlgen
# using msgType=L to mock a cancellation requect
generator.cncPriceStram.rule=L
generator.cncPriceStram.templatePath=./msg-template/USDJPYQuoteCancellation.xml
generator.cncPriceStram.postAction.cancel=\#message.getString("66")

# send Pending New and then send Filled when received msgType=D
# just demo by xsltgen to show how to use xslt.
generator.genNewOrderPending.type=xsltgen
generator.genNewOrderPending.rule=D
generator.genNewOrderPending.xsltPath=./msg-template/executionReportPending.xslt
generator.genNewOrderPending.loop.delay=100
generator.genNewOrderPending.loop.count=1

generator.genNewOrderFill.type=xsltgen
generator.genNewOrderFill.rule=D
generator.genNewOrderFill.xsltPath=./msg-template/executionReportFilled.xslt
generator.genNewOrderFill.loop.delay=3000
generator.genNewOrderFill.loop.count=1